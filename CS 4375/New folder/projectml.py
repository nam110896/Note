# -*- coding: utf-8 -*-
"""ProjectML.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12SP-KzeYxN2Xq986CYkLz_nVvygg4HIo
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

import tensorflow as tf
from tensorflow.keras import layers, models

#Importing data
url = "https://goldpricetimeseries.s3.us-east-2.amazonaws.com/Gold+Price.csv"
data = pd.read_csv(url, index_col=False, names=['Date','Price','Open','High','Low','Volume', 'Chg%'])
df = pd.DataFrame(data=data)

#Preprocessing data

if ('Date' or 'Chg%') in df.columns:
  df.drop(['Date','Chg%'], axis=1, inplace=True) #Drop date
  df.drop(0, axis=0, inplace=True) #Drop first row (had column headers)

#Convert to integers
df = df.astype(float)

#Keep copy of data before normalization
df_copy = df.copy()

#Splitting Training (80%) and Testing (20%) data
size = len(df)

train_data = df.iloc[:int(size*0.8),:]
test_data = df.iloc[int(size*0.8):,:]

#Normalizing the data
tMean = train_data.mean()
tStd = train_data.std()
train_data = (train_data - tMean) / tStd
test_data = (test_data - tMean) / tStd
print (test_data)

#Splitting train & test data into X and y
X_train = train_data[['Open','High','Low','Volume']] #shape(1781, 4)
y_train = train_data[['Price']] #shape(1781, 1)

X_test = test_data[['Open','High','Low','Volume']] #shape(446, 4)
y_test = test_data[['Price']] #.reshape(446,1) #shape(446, 1)

#Graph of current data
x = [i for i in range(df_copy.shape[0])]
plt.plot(x, df_copy['Price'])
plt.title('Gold Stock Over (2014 - 2022)')
plt.xlabel("Day Since Jan 1st, 2014")
plt.ylabel("Gold Price")
plt.show()

